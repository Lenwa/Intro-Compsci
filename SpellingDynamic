import java.io.File;
import javax.swing.*;
import java.util.Random;
import java.util.ArrayList;
import java.awt.event.*;
import java.awt.*;

public class SpellingDynamic {
    
    public static void main(String[] args) {        
        ImageIcon adventure = new ImageIcon("C:\\Users\\Kyle\\"
                + "Desktop\\Programs\\Icons\\adventure.jpeg");
        JFrame frame = new JFrame();
        frame.setTitle("Spelling Adventure");
        frame.setVisible(true);     
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1200, 760);
        frame.setLocationRelativeTo(null);
        JPanel panel = new JPanel();
        JLabel label = new JLabel(adventure);
        JButton button = new JButton("START");
        Font font = new Font("Serif", Font.BOLD, 25);
        button.setFont(font);
        button.addActionListener(new Action());
        button.setAlignmentX(panel.CENTER_ALIGNMENT);
        button.setAlignmentY(panel.BOTTOM_ALIGNMENT);
        button.setPreferredSize(new Dimension(150, 40));
        panel.setBackground(Color.red);
        panel.add(button);
        panel.add(label);
        frame.add(panel);
    }
    
    static class Action implements ActionListener{
        public void actionPerformed (ActionEvent ev1){
            
        File folder = new File("C:\\Users\\Kyle\\Desktop\\Programs\\Images");     
        File[] listOfFiles = folder.listFiles();       
        ArrayList<String> imgNames = new ArrayList<>();
        ArrayList<String> previous = new ArrayList<>();        
        Object answer;        
        String timePlay;        
        int count = 0, score = 0;        
        int timeP1 = 0;
        Random rand = new Random();
        for (File listOfFile : listOfFiles) {
            imgNames.add(listOfFile.getName());
        } 
        int numChoice = imgNames.size();         
        try{
            timePlay = JOptionPane.showInputDialog(null, "How many times " 
            + "would you like to play the spelling game?", "Welcome to Spelling "
                    + "Adventure", JOptionPane.QUESTION_MESSAGE);
            if(timePlay == null){              
                return;
            }
            else{
                timeP1 = Integer.parseInt(timePlay);
            }
         }
         catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid input, setting number "
                    + "of questions to the maximum", 
            "Oops", JOptionPane.WARNING_MESSAGE);
            timeP1 = numChoice;
        }
        //probably will make some comment about these if statements (I don't like them either)
        if(timeP1 > numChoice){
            timeP1 = numChoice;
        }      
        if(timeP1 < 0){
            JOptionPane.showMessageDialog(null, "Can't except negative numbers "
                    + ", setting number of questions to: " + numChoice,                
                    "Whoops", JOptionPane.WARNING_MESSAGE);
            timeP1 = numChoice;
        }   
        while(count < timeP1){                
                count++;        
            int choice = rand.nextInt(numChoice);
            String spellingWord = imgNames.get(choice);      
            boolean check = previous.contains(spellingWord);
            previous.add(spellingWord);       
            if(check){
                count--;
            }
            else{			
                String word = spellingWord.substring(0, spellingWord.indexOf('.'));		
                answer = JOptionPane.showInputDialog(null, "Enter what you see", 
                "Question " + count + " out of" + timeP1, 
                JOptionPane.PLAIN_MESSAGE, 
                new ImageIcon("C:\\Users\\Kyle\\Desktop\\Programs\\Images\\" + 
                spellingWord), null, "Enter your answer here");                
                if(answer == null){               
                    break;
                    }                    
                else{
                    if(answer.toString().toLowerCase().equals(word)){
                        score++;
                        JOptionPane.showMessageDialog(null, "", "Great job!", 
                        JOptionPane.PLAIN_MESSAGE,
                        new ImageIcon("C:\\Users\\Kyle\\Desktop\\Programs\\Icons"
                                + "\\correct.png"));
                    }			
                    else{
                        JOptionPane.showMessageDialog(null, 
                        "You entered:\n" + answer + "\n The correct spelling "
                         + "is\n "+ word , "Oops", JOptionPane.PLAIN_MESSAGE,
                        new ImageIcon("C:\\Users\\Kyle\\Desktop\\Programs\\"
                            + "Icons\\incorrect.png"));
                    }   
                }
            }
        }
       JOptionPane.showMessageDialog(null, "Thanks for playing!\n"
               + "You spelled " +
           + score + " out of " + count + " words correctly!", 
           "Thanks for playing!", JOptionPane.PLAIN_MESSAGE,
           new ImageIcon("C:/Users/Kyle/Desktop/Programs/Icons/byefrog.png"));
    }
}
}
